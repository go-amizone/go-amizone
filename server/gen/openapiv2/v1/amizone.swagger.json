{
  "swagger": "2.0",
  "info": {
    "title": "Amizone API",
    "version": "0.7.0",
    "contact": {
      "name": "ditsuke",
      "url": "https://ditsuke.com",
      "email": "hello@ditsuke.com"
    },
    "license": {
      "name": "GPL-2.0",
      "url": "https://github.com/ditsuke/go-amizone/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "AmizoneService"
    }
  ],
  "host": "amizone.fly.dev",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/attendance": {
      "get": {
        "operationId": "AmizoneService_GetAttendance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AttendanceRecords"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/class_schedule/{date.year}/{date.month}/{date.day}": {
      "get": {
        "operationId": "AmizoneService_GetClassSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ScheduledClasses"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "date.year",
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date.month",
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date.day",
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/courses": {
      "get": {
        "summary": "GetCurrentCourses returns a list of courses for the \"current\" semester.",
        "operationId": "AmizoneService_GetCurrentCourses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Courses"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/courses/{semesterRef}": {
      "get": {
        "summary": "GetCourses returns a list of courses for the given semester.",
        "operationId": "AmizoneService_GetCourses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Courses"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "semesterRef",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/exam_result": {
      "get": {
        "summary": "GetCurrentExamResult returns the exam result for the \"current\" semester.",
        "operationId": "AmizoneService_GetCurrentExamResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExamResultRecords"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/exam_result/{semesterRef}": {
      "get": {
        "summary": "GetExamResult returns the exam result for the given semester.",
        "operationId": "AmizoneService_GetExamResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExamResultRecords"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "semesterRef",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/exam_schedule": {
      "get": {
        "summary": "GetExamSchedule returns exam schedule. Amizone only allows access to schedules for the ongoing semester\nand only close to the exam dates, so we don't take any parameters.",
        "operationId": "AmizoneService_GetExamSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExaminationSchedule"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/faculty/feedback/submit": {
      "post": {
        "summary": "FillFacultyFeedback submits faculty feedback.",
        "description": "It does so by making a tradeoffs -- all faculty feedback is submitted at\nonce and its identical for all of them.\n\nParameters:\n- rating: The rating to submit for all faculty. These are ratings on a scale of 1-5.\n- query_rating: The rating to \"query\" type questions at the bottom of the feedback form.\n  These are ratings on a scale of 1-3.",
        "operationId": "AmizoneService_FillFacultyFeedback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FillFacultyFeedbackResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FillFacultyFeedbackRequest"
            }
          }
        ],
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/semesters": {
      "get": {
        "summary": "GetSemesters returns a list of semesters that include past semesters and the current semester.\nThese semesters can be used in other RPCs that consume them, for example GetCourses.",
        "operationId": "AmizoneService_GetSemesters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SemesterList"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/user_profile": {
      "get": {
        "summary": "GetUserProfile returns the user's profile.",
        "operationId": "AmizoneService_GetUserProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Profile"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/wifi_mac": {
      "get": {
        "summary": "GetWifiMacInfo returns the user's registered MAC addresses.",
        "operationId": "AmizoneService_GetWifiMacInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1WifiMacInfo"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AmizoneService"
        ]
      },
      "post": {
        "summary": "RegisterWifiMac registers a MAC address to the user's account.",
        "operationId": "AmizoneService_RegisterWifiMac",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EmptyMessage"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterWifiMacRequest"
            }
          }
        ],
        "tags": [
          "AmizoneService"
        ]
      }
    },
    "/api/v1/wifi_mac/{address}": {
      "delete": {
        "summary": "DeregsiterWifiMac removes a registered MAC address from the user's account.",
        "operationId": "AmizoneService_DeregisterWifiMac",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EmptyMessage"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AmizoneService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "v1Attendance": {
      "type": "object",
      "properties": {
        "attended": {
          "type": "integer",
          "format": "int32"
        },
        "held": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Attendance messages are embedded in other messages (Course, AttendanceRecord)."
    },
    "v1AttendanceRecord": {
      "type": "object",
      "properties": {
        "attendance": {
          "$ref": "#/definitions/v1Attendance"
        },
        "course": {
          "$ref": "#/definitions/v1CourseRef"
        }
      },
      "description": "AttendanceRecord represents a student's attendance for a course."
    },
    "v1AttendanceRecords": {
      "type": "object",
      "properties": {
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AttendanceRecord"
          }
        }
      },
      "description": "AttendanceRecords is a list of attendance records, usually representing attendance records for all\ncourses in a semester."
    },
    "v1AttendanceState": {
      "type": "string",
      "enum": [
        "PENDING",
        "PRESENT",
        "ABSENT",
        "NA",
        "INVALID"
      ],
      "default": "PENDING"
    },
    "v1Course": {
      "type": "object",
      "properties": {
        "ref": {
          "$ref": "#/definitions/v1CourseRef"
        },
        "type": {
          "type": "string"
        },
        "attendance": {
          "$ref": "#/definitions/v1Attendance"
        },
        "internalMarks": {
          "$ref": "#/definitions/v1Marks"
        },
        "syllabusDoc": {
          "type": "string"
        }
      },
      "description": "Course represents a course on Amizone."
    },
    "v1CourseRef": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1Courses": {
      "type": "object",
      "properties": {
        "courses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Course"
          }
        }
      },
      "description": "Courses are a list of courses, usually used to group together courses for a semester."
    },
    "v1Credits": {
      "type": "object",
      "properties": {
        "acquired": {
          "type": "integer",
          "format": "int32"
        },
        "effective": {
          "type": "integer",
          "format": "int32"
        },
        "points": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Credits is a general message representing the credit Information in a result"
    },
    "v1EmptyMessage": {
      "type": "object"
    },
    "v1ExamResultRecord": {
      "type": "object",
      "properties": {
        "course": {
          "$ref": "#/definitions/v1CourseRef"
        },
        "score": {
          "$ref": "#/definitions/v1Score"
        },
        "credits": {
          "$ref": "#/definitions/v1Credits"
        },
        "publishDate": {
          "$ref": "#/definitions/typeDate"
        }
      },
      "description": "ResultRecord represents a course's result (a grade, credit, etc.) in a semester."
    },
    "v1ExamResultRecords": {
      "type": "object",
      "properties": {
        "courseWise": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ExamResultRecord"
          }
        },
        "overall": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OverallResult"
          }
        }
      },
      "title": "ExamResultRecords is returned by GetExamResult and GetCurrentExamResult and contains two arrays\none for the course wise result and the other for semester wise gpa"
    },
    "v1ExaminationSchedule": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "exams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ScheduledExam"
          }
        }
      }
    },
    "v1FillFacultyFeedbackRequest": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "queryRating": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "v1FillFacultyFeedbackResponse": {
      "type": "object",
      "properties": {
        "filledFor": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Marks": {
      "type": "object",
      "properties": {
        "have": {
          "type": "number",
          "format": "float"
        },
        "max": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Marks is a general message representing a student's marks (internal, external, total, etc). in a course or otherwise.\nIt is embedded in other messages and its meaning is context-dependent."
    },
    "v1OverallResult": {
      "type": "object",
      "properties": {
        "semester": {
          "$ref": "#/definitions/v1SemesterRef"
        },
        "semesterGradePointAverage": {
          "type": "number",
          "format": "float"
        },
        "cumulativeGradePointAverage": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "OverallResult message represents the result for a semester (SGPA, CGPA), this is also returned as an\narray containing the result for every semester"
    },
    "v1Profile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "enrollmentNumber": {
          "type": "string"
        },
        "enrollmentValidity": {
          "type": "string",
          "format": "date-time"
        },
        "batch": {
          "type": "string"
        },
        "program": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "bloodGroup": {
          "type": "string"
        },
        "idCardNumber": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "Profile models information exposed by the Amizone ID card page"
    },
    "v1RegisterWifiMacRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "overrideLimit": {
          "type": "boolean"
        }
      }
    },
    "v1ScheduledClass": {
      "type": "object",
      "properties": {
        "course": {
          "$ref": "#/definitions/v1CourseRef"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "faculty": {
          "type": "string"
        },
        "room": {
          "type": "string"
        },
        "attendance": {
          "$ref": "#/definitions/v1AttendanceState"
        }
      },
      "description": "ScheduledClass represents a scheduled class."
    },
    "v1ScheduledClasses": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ScheduledClass"
          }
        }
      },
      "description": "ScheduledClasses is a group of scheduled classes, usually used to represent daily class schedules."
    },
    "v1ScheduledExam": {
      "type": "object",
      "properties": {
        "course": {
          "$ref": "#/definitions/v1CourseRef"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "mode": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "v1Score": {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "grade": {
          "type": "string"
        },
        "gradePoint": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Score is a general message representing the grade in a result"
    },
    "v1Semester": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        }
      },
      "description": "Semester models a semester reference on Amizone. We include both a semester \"name\" / label and a ref\nto decouple the way they're represented from their form values. These happen to be same at the time of\nmodelling, however, so they might appear duplicitous."
    },
    "v1SemesterList": {
      "type": "object",
      "properties": {
        "semesters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Semester"
          }
        }
      }
    },
    "v1SemesterRef": {
      "type": "object",
      "properties": {
        "semesterRef": {
          "type": "string"
        }
      },
      "description": "SemesterRef is a reference to a semester. References are used to avoid coupling the semester's name to the semester's ID.\nReferences can be retrieved through the GetSemesters RPC."
    },
    "v1WifiMacInfo": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slots": {
          "type": "integer",
          "format": "int32"
        },
        "freeSlots": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic",
      "description": "Valid auth credentials for s.amizone.edu"
    }
  },
  "security": [
    {
      "BasicAuth": [
        "*"
      ]
    }
  ],
  "externalDocs": {
    "description": "More about go-amizone",
    "url": "https://github.com/ditsuke/go-amizone"
  }
}
